<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architecture on Minko Gechev&#39;s blog</title>
    <link>http://blog.mgechev.com/categories/architecture/</link>
    <description>Recent content in Architecture on Minko Gechev&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Apr 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://blog.mgechev.com/categories/architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scalable Single-Page Application Architecture</title>
      <link>http://blog.mgechev.com/2016/04/10/scalable-javascript-single-page-app-angular2-application-architecture/</link>
      <pubDate>Sun, 10 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.mgechev.com/2016/04/10/scalable-javascript-single-page-app-angular2-application-architecture/</guid>
      <description>In order to have better understanding of the following blog post you should be familiar with the fundamentals of the object-oriented and functional programming. I also strongly encourage you to explore the redux pattern.
A couple of months ago I started working on the first version of a Silicon Valley-based startup. The project is a single-page application with quite dynamic business requirements. As in most modern single-page applications we have a fat client which encapsulates decent amount of business logic and state.</description>
    </item>
    
    <item>
      <title>WebRTC chat with React.js</title>
      <link>http://blog.mgechev.com/2014/09/03/webrtc-peer-to-peer-chat-with-react/</link>
      <pubDate>Wed, 03 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.mgechev.com/2014/09/03/webrtc-peer-to-peer-chat-with-react/</guid>
      <description>In this blog post I&amp;rsquo;m going to share how could be build WebRTC chat with React.js. Before we continue lets describe briefly what React.js and WebRTC are.
The application from this tutorial is available at GitHub.
React.js React.js is reactive JavaScript framework, which helps you to build user interface. Facebook states that we can think of React as the &amp;ldquo;V&amp;rdquo; in MVC. React&amp;rsquo;s main aspect is the state. When the state of the application changes this automatically propagates through the application&amp;rsquo;s components.</description>
    </item>
    
  </channel>
</rss>